@using Agendo.Server.Models;
@using Agendo.Shared.DTOs;
@using Agendo.Shared.Form.CreateShift;
@using Radzen.Blazor;
@using Radzen
@using System.Text.Json;
@using System.Text;
@inject HttpClient _http;
@inject DialogService DialogService


<RadzenTemplateForm TItem="DailyScheduleDTO" Data="@model" Submit=@OnSubmit>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="EmpNr" />
        </div>
        <div class="col">
            <RadzenNumeric @bind-Value="@model.Name" Name="ShiftName" />
            <RadzenRequiredValidator Text="Enter shift name" Component="Name" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Hours" Name="Hours" />
            <RadzenRequiredValidator Text="shift hours" Component="Hours" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </div>
    </div>
</RadzenTemplateForm>



@code {
    [Parameter]
    public DailyScheduleDTO dailySchedule { get; set; }

    private DailyScheduleDTO model = new DailyScheduleDTO();


    protected override void OnParametersSet()
    {
        model = dailySchedule;
    }


    async void OnSubmit()
    {
        var body = new CreateShift
            {
                Nr = model.Nr,
                Name = model.Name,
                Hours = model.Hours

            };
        var x = await _http.PutAsJsonAsync("api/dailySchedule", body);
        Console.WriteLine(x);
        DialogService.Close(model);
    }
}
