@inject DialogService DialogService
@using Agendo.Server.Models;
@using Agendo.Shared.Form.CreateEmployeeShift;
@using Radzen.Blazor;
@using Radzen;
@inject HttpClient _http;
<RadzenTemplateForm TItem="EmployeeShiftDTO" Data="@model" Submit=@OnSubmit>

    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="ShiftNr" />
        </div>
        <div class="col">
            <RadzenNumeric @bind-Value="@model.ShiftNR" Name="ShiftNR" />
            <RadzenRequiredValidator Text="Title is required" Component="ShiftNR" />
        </div>
    </div>

    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </div>
    </div>
</RadzenTemplateForm>
@code {
    [Parameter]
    public EmployeeShiftDTO Shift { get; set; }
    [Parameter]
    public int EmpNR { get; set; }

    private EmployeeShiftDTO model = new EmployeeShiftDTO();

    protected override void OnParametersSet()
    {
        model = Shift;
    }

    async void OnSubmit()
    {

        var body = new CreateEmployeeShift
            {
                EmpNr = EmpNR,
                ShiftDate = model.Start,
                ShiftNr = model.ShiftNR
            };



        var x = await _http.PutAsJsonAsync("api/EmployeeShift", body);
        Console.WriteLine(x);
        DialogService.Close(model);
    }
}