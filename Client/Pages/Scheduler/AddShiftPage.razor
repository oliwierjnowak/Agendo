@inject DialogService DialogService
@using Agendo.Client.HttpClients
@using Agendo.Server.Models
@using Agendo.Shared.DTOs;
@using Agendo.Shared.Form.CreateEmployeeShift;
@using Radzen.Blazor;
@using Radzen
@using System.Text.Json;
@using System.Text;
@inject IApiClient ApiClient

<RadzenTemplateForm TItem="EmployeeShiftDTO" Data="@model" Submit=@OnSubmit>

    <div class="row" style="margin-bottom: 16px">

        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Shift" />
        </div>
        <div class="col">

            <RadzenDropDown TItem="DailyScheduleDTO"
            @bind-Value=@shiftnr
                            Data=@shifts
                            TextProperty="Name"
                            ValueProperty="Nr"
                            Style="width: 100%; max-width: 400px;" />
           
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </div>
    </div>
</RadzenTemplateForm>
@code {


    [Parameter]
    public DateTime Start { get; set; }

    [Parameter]
    public DateTime End { get; set; }
    [Parameter]
    public int EmpNR { get; set; }

    public int shiftnr { get; set; }

    public IEnumerable<DailyScheduleDTO>? shifts;

    private EmployeeShiftDTO model = new EmployeeShiftDTO();

    protected override async Task OnInitializedAsync()
    {
        shifts = await ApiClient.GetDailySchedule();

    }


    protected async override void OnParametersSet()
    {
        model.Start = Start;
        model.End = End;
        model.EmpNr = EmpNR;

    }

    async void OnSubmit()
    {

        var body = new CreateEmployeeShift
            {
                EmpNr = model.EmpNr,
                ShiftDate = model.Start,
                ShiftNr = shiftnr
            };



        var x = await ApiClient.CreateEmployeeShift(body);
        DialogService.Close(model);
    }
}